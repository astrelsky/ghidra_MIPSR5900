<?xml version="1.0" encoding="UTF-8"?>
<!-- This cspec describes the MIPS64 ABI called "o64"
     This ABI must be requested explicitly in gcc with the -mabi=o64 flag.
      
     o64 specifies 64-bit registers but 32-bit pointers, but otherwise is a copy of the original MIPS32 ABI 
     o64 is different from the default ABI "n32"
     The primary parameter passing difference between o64 and n32 is that
     o64 can use only up to 4 general purpose registers for parameters before going to the stack, while
     n32 can use up to 8 registers
     
     See for example "MIPSpro ABI Handbook" SGI part number 007-2816-005     
-->
<compiler_spec>
  <data_organization>
     <absolute_max_alignment value="16" />
     <machine_alignment value="4" />
     <default_alignment value="4" />
     <default_pointer_alignment value="4" />
     <pointer_size value="4" />
     <wchar_size value="2" />
     <short_size value="2" />
     <integer_size value="4" />
     <long_size value="8" />
     <long_long_size value="8" />
     <float_size value="4" />
     <double_size value="8" />
     <long_double_size value="16" />
     <size_alignment_map>
          <entry size="1" alignment="1" />
          <entry size="2" alignment="2" />
          <entry size="4" alignment="8" />
          <entry size="8" alignment="8" />
          <entry size="16" alignment="16" />
     </size_alignment_map>
  </data_organization>
  <stackpointer register="sp" space="ram" growth="negative"/>
  <funcptr align="4"/>
  <spacebase name="gp" register="gp" space="ram"/>
  <spacebase name="fp" register="fp" space="ram"/>
  <global>
    <range space="gp"/>
    <range space="ram"/>
    <range space="register" first="0x2000" last="0x2fff"/>
  </global>
  <returnaddress>
    <register name="ra"/>
  </returnaddress>
  <aggressivetrim signext="true"/>  <!-- Aggressively try to eliminate sign extensions -->
  <default_proto>
    <prototype name="__stdcall" extrapop="16" stackshift="16">
      <input killedbycall="true">
        <pentry minsize="1" maxsize="4" metatype="float">
          <register name="f12"/>
        </pentry>
        <pentry minsize="1" maxsize="4" metatype="float">
          <register name="f13"/>
        </pentry>
        <pentry minsize="1" maxsize="8" extension="sign">
          <register name="a0"/>
        </pentry>
        <pentry minsize="1" maxsize="8" extension="sign">
          <register name="a1"/>
        </pentry>
        <pentry minsize="1" maxsize="8" extension="sign">
          <register name="a2"/>
        </pentry>
        <pentry minsize="1" maxsize="8" extension="sign">
          <register name="a3"/>
        </pentry>
        <pentry minsize="1" maxsize="2000" align="8">
          <addr offset="32" space="stack"/>
        </pentry>
      </input>
      <output>
        <pentry minsize="1" maxsize="4" metatype="float">
          <register name="f0"/>
        </pentry>
        <pentry minsize="1" maxsize="4" metatype="float">
          <register name="f1"/>
        </pentry>
        <pentry minsize="1" maxsize="8" extension="sign">
          <register name="v0"/>
        </pentry>
        <pentry minsize="1" maxsize="8" extension="sign">
          <register name="v1"/>
        </pentry>
      </output>
      <unaffected>
        <register name="s0"/>
        <register name="s1"/>
        <register name="s2"/>
        <register name="s3"/>
        <register name="s4"/>
        <register name="s5"/>
        <register name="s6"/>
        <register name="s7"/>
        <register name="fp"/>
        <register name="sp"/>
        <register name="gp"/>
        <register name="ra"/>
        <register name="f20"/>
        <register name="f21"/>
        <register name="f22"/>
        <register name="f23"/>
        <register name="f24"/>
        <register name="f25"/>
        <register name="f26"/>
        <register name="f27"/>
        <register name="f28"/>
        <register name="f29"/>
        <register name="f30"/>
        <register name="f31"/>
      </unaffected>
      <localrange>
        <range space="stack" first="0xfff0bdc0" last="0xffffffff"/>
        <range space="stack" first="0" last="15"/>  <!-- This is backup storage space for register params, but we treat as locals -->
      </localrange>
    </prototype>
  </default_proto>
</compiler_spec>
